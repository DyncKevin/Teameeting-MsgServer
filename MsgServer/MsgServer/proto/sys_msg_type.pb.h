// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys_msg_type.proto

#ifndef PROTOBUF_sys_5fmsg_5ftype_2eproto__INCLUDED
#define PROTOBUF_sys_5fmsg_5ftype_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace pms {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sys_5fmsg_5ftype_2eproto();
void protobuf_AssignDesc_sys_5fmsg_5ftype_2eproto();
void protobuf_ShutdownFile_sys_5fmsg_5ftype_2eproto();


enum ETransferModule {
  MCONNECTOR = 0,
  MMSGQUEUE = 1,
  MMEETING = 2,
  MP2P = 3,
  MLIVE = 4,
  MCALLCENTER = 5,
  MLOGICAL = 6,
  MSEQUENCE = 7,
  MSTORAGE = 8,
  MGRPNOTIFY = 9,
  MPUSHER = 10,
  ETransferModule_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ETransferModule_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ETransferModule_IsValid(int value);
const ETransferModule ETransferModule_MIN = MCONNECTOR;
const ETransferModule ETransferModule_MAX = MPUSHER;
const int ETransferModule_ARRAYSIZE = ETransferModule_MAX + 1;

enum ETransferType {
  TCONN = 0,
  TTRANS = 1,
  TQUEUE = 2,
  TDISPATCH = 3,
  TPUSH = 4,
  TLOGIN = 5,
  TLOGOUT = 6,
  TWRITE_REQUEST = 7,
  TWRITE_RESPONSE = 8,
  TREAD_REQUEST = 9,
  TREAD_RESPONSE = 10,
  ETransferType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ETransferType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ETransferType_IsValid(int value);
const ETransferType ETransferType_MIN = TCONN;
const ETransferType ETransferType_MAX = TREAD_RESPONSE;
const int ETransferType_ARRAYSIZE = ETransferType_MAX + 1;

enum ETransferPriority {
  PLOW = 0,
  PNORMAL = 1,
  PHIGH = 2,
  ETransferPriority_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ETransferPriority_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ETransferPriority_IsValid(int value);
const ETransferPriority ETransferPriority_MIN = PLOW;
const ETransferPriority ETransferPriority_MAX = PHIGH;
const int ETransferPriority_ARRAYSIZE = ETransferPriority_MAX + 1;

enum ETransferFlag {
  FNOACK = 0,
  FNEEDACK = 1,
  FACK = 2,
  ETransferFlag_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ETransferFlag_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ETransferFlag_IsValid(int value);
const ETransferFlag ETransferFlag_MIN = FNOACK;
const ETransferFlag ETransferFlag_MAX = FACK;
const int ETransferFlag_ARRAYSIZE = ETransferFlag_MAX + 1;

enum ETransferTag {
  SEQN = 0,
  DATA = 1,
  ETransferTag_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ETransferTag_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ETransferTag_IsValid(int value);
const ETransferTag ETransferTag_MIN = SEQN;
const ETransferTag ETransferTag_MAX = DATA;
const int ETransferTag_ARRAYSIZE = ETransferTag_MAX + 1;

enum EConnTag {
  THI = 0,
  THELLO = 1,
  THELLOHI = 2,
  TKEEPALIVE = 3,
  EConnTag_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EConnTag_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EConnTag_IsValid(int value);
const EConnTag EConnTag_MIN = THI;
const EConnTag EConnTag_MAX = TKEEPALIVE;
const int EConnTag_ARRAYSIZE = EConnTag_MAX + 1;

enum EConnType {
  TTCP = 0,
  THTTP = 1,
  EConnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EConnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EConnType_IsValid(int value);
const EConnType EConnType_MIN = TTCP;
const EConnType EConnType_MAX = THTTP;
const int EConnType_ARRAYSIZE = EConnType_MAX + 1;

// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pms

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pms::ETransferModule> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::pms::ETransferType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::pms::ETransferPriority> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::pms::ETransferFlag> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::pms::ETransferTag> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::pms::EConnTag> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::pms::EConnType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sys_5fmsg_5ftype_2eproto__INCLUDED
